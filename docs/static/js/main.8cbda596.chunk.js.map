{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","autoComplete","placeholder","autoFocus","getGifs","category","a","url","encodeURI","process","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","toUpperCase","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAyCeA,EAtCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAoBzC,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAQhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SArBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,QAqBnBG,aAAa,MACbC,YAAY,gBACZC,UAAU,U,+BC7BLC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,6BAC2EI,oCAD3E,SAEFC,MAAMH,GAFJ,cAEfI,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QATjB,kBAadO,GAbc,4CAAH,sDCCPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAElC,OACE,sBAAKe,UAAU,yCAAf,UACE,qBAAKC,IAAMhB,EAAMiB,IAAMN,IACvB,4BAAKA,QCFEO,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAChBjB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAsB1C,OAhBAC,qBAAW,WACTzB,EAAQC,GAEPyB,MAAK,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAKZ,CAACrB,IAIGsB,EDjB0BK,CAAc3B,GAAlCc,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAIrB,OACE,qCACE,oBAAIT,GAAG,aAAaK,UAAU,oCAA9B,SAAoEjB,EAAS4B,gBAC7E,uBAEEP,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEOA,GADGA,EAAIC,aEYXiB,EA/BM,SAAC,GAAgC,IAAD,IAA7BC,yBAA6B,MAAT,GAAS,IAEf/C,mBAAS+C,GAFM,mBAE5CC,EAF4C,KAEhCjD,EAFgC,KAInD,OACE,sBAAKmC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,gBAAd,iCACA,cAAC,EAAD,CAAanC,cAAgBA,SAIjC,qBAAKmC,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SAEIc,EAAWrB,KAAI,SAACV,GAAD,OACb,cAAC,EAAD,CAEEA,SAAUA,GADLA,cChBrBgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8cbda596.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n    // console.log('Submit realizado!');\r\n    // setCategories\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n        type='text'\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n        autoComplete=\"off\"\r\n        placeholder=\"Find a gif...\"\r\n        autoFocus=\"on\"\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${process.env.REACT_APP_APIKEY}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({title, url }) => {\r\n\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3 id=\"grid-title\" className=\"animate__animated animate__fadeIn\">{ category.toUpperCase() }</h3>\r\n      <hr />\r\n\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem\r\n              key = { img.id }\r\n              { ...img }\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n    \r\n    .then(imgs => {\r\n\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n\r\n    })\r\n\r\n  }, [category]);\r\n\r\n \r\n\r\n  return state;   // { data:[], loading:true };\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ({ defaultCategories = [] }) => {\r\n\r\n  const [categories, setCategories] = useState(defaultCategories);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='row'>\r\n        <div className='col-6'>\r\n          <h1 className=\"text-gradient\">Search all the Gifs</h1>\r\n          <AddCategory setCategories={ setCategories }/>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='row'>\r\n        <div className='col-12'>\r\n          {\r\n            categories.map((category) => (\r\n              <GifGrid\r\n                key={category}\r\n                category={category}\r\n\r\n              />\r\n            ))\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}